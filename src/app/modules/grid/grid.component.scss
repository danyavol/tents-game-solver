// GRID GENERAL STYLES

$gap: 1em;
$cell-size: 10em;
$min-grid-size: 2;
$max-grid-size: 20;

.grid-container {
    font-size: 6px;
    display: grid;
    gap: $gap;
}

@for $i from $min-grid-size through $max-grid-size {
    .w-#{$i} {
        grid-template-columns: repeat(#{$i + 1}, $cell-size);

        .rows-value-container {
            grid-template-rows: repeat(#{$i}, $cell-size);
            grid-row: 2 / span #{$i};
        }
    }
}

@for $i from $min-grid-size through $max-grid-size {
    .h-#{$i} {
        grid-template-rows: 5em repeat(#{$i}, $cell-size);

        .columns-value-container {
            grid-template-columns: repeat(#{$i}, $cell-size);
            grid-column: 2 / span #{$i};
        }
    }
}

// STYLES OF ADDITIONAL TOP AND LEFT LINES

.rows-value-container,
.columns-value-container {
    display: grid;
    gap: $gap;
}

.line-value {
    font-size: 6em;
    font-family: sans-serif;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 0.15em;


    .value {
        line-height: 0.8;
        transition: 0.1s ease;
    }

    .status-icon {
        position: relative;
        line-height: 0;
        width: 0.4em;
        height: 0.4em;

        svg-icon {
            position: absolute;
            opacity: 0;
            transition: 0.1s ease;

            svg {
                width: 0.4em;
                height: 0.4em;
            }
        }
    }

    .buttons {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
}

.columns-value-container .line-value {
    flex-direction: row-reverse;
    justify-content: flex-start;
}

.tent-arrow-icon svg {
    display: block;
    color: #c7c7c7;
    width: 0.4em;
    height: 0.4em;
    transition: color 0.1s ease;
    cursor: pointer;
    user-select: none;

    &:hover {
        color: #828282;
    }
}

// STYLES SPECIFIC FOR DIFFERENT MODES

.edit-mode {
    .columns-value-container .line-value {
        flex-direction: row;
        justify-content: flex-end;
    }
}

.view-mode, .play-mode {
    .columns-value-container .line-value:not(.mistake, .complete) {
        justify-content: flex-start;
    }

    .line-value {
        &.complete {
            color: #b8afa6;

            .check {
                opacity: 1
            }
        }

        &.mistake {
            color: #ed3c3c;

            .clear {
                opacity: 1
            }
        }
    }
}
